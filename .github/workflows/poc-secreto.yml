name: Inyeccion secreto

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug]

    runs-on: windows-latest

    env:
      Solution_Name: PocSecretToken.sln
      Project_Name: PocSecretToken.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install .NET Framework 4.7
    - name: Install .NET Framework 4.7
      run: |
        $url = "https://download.visualstudio.microsoft.com/download/pr/e5eb8d37-5bbd-4fb7-a71d-b749e010ef9f/601437d729667ecd29020a829fbc4881/ndp471-devpack-enu.exe"
        $exePath = "$env:TEMP\NDP47-KB3186497-x86-x64-AllOS-ENU.exe"
        Invoke-WebRequest -Uri $url -OutFile $exePath
        Start-Process -FilePath $exePath -ArgumentList "/quiet /norestart" -Wait

    # Retrieve the secret from GitHub Secrets
    - name: Retrieve secret
      env:
        SECRET_VALUE: ${{ secrets.TOKEN_SECRETO }}
      run: echo "El secreto es $SECRET_VALUE"

    # Inject the secret into your C# project
    - name: Inject secret
      run: |
        $secretValue = "${{ env.SECRET_VALUE }}"
        $constantsPath = "Constants.cs"

        (Get-Content -Path $constantsPath -Raw) -replace '<SecretoPlaceholder>', $secretValue | Set-Content -Path $constantsPath -Force

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Upload artifacts from the debug folder
    - name: Upload Debug Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Debug-Artifacts
        path: ${{ github.workspace }}/bin/Debug
